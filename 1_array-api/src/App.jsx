import { useState } from "react";
import "./App.css";

function App() {
  const initialArray = [
    "appleüçé",
    "bananaüçå",
    "cherryüçí",
    "melonüçà",
    "lemonüçã",
    "tangerineüçä",
  ];

  const [array, setArray] = useState(initialArray); // origin array`
  const [result, setResult] = useState(""); // Result array
  const [query, setQuery] = useState(""); // inputÏ∞Ω state

  /*** article_1 Ìï®Ïàò ***/

  // 1. forEach: ArrayÏùò Í∞Å ÏïÑÏù¥ÌÖúÏùÑ Ï∂úÎ†•
  const handleForEach = () => {
    let tempResult = "";
    array.forEach(function (fruit) {
      tempResult += `${fruit}`;
    });
    setResult(tempResult);
  };

  // 2.filter: ArrayÏùò ÏöîÏÜå Ï§ëÏóêÏÑú ÏûÖÎ†•Ìïú Í∞íÍ≥º ÏùºÏπòÌïòÎäî ÏöîÏÜåÎì§Îßå Ï∂úÎ†•
  const handleFilter = () => {
    const newArray = array.filter(function (fruit) {
      if (fruit.includes(query)) {
        return true;
      } else return false;
    });
    setResult(newArray.join(", "));
  };

  // 3. map: ArrayÏùò Í∞Å ÏöîÏÜåÎ•º ÎåÄÎ¨∏ÏûêÎ°ú Î≥ÄÌôòÌïòÏó¨ Ï∂úÎ†•
  const handleMap = () => {
    const newArray = array.map(function (fruit) {
      return fruit.toUpperCase();
    });
    setResult(newArray.join(", "));
  };

  // 4. reduce: Í∞Å ÏïÑÏù¥ÌÖúÏùÑ ÏâºÌëúÎ°ú Íµ¨Î∂ÑÌïòÏó¨ Ï∂úÎ†• (Ï∂ïÏ†ÅÎêòÎäî ÌòïÌÉú)
  const handleReduce = () => {
    const reduceList = array.reduce(function (acc, cur) {
      return `${acc}, ${cur}`;
    });
    setResult(reduceList);
  };

  // 5. push: input ÌÉúÍ∑∏Ïóê ÏûÖÎ†•Ìïú Í∞íÏùÑ Î∞∞Ïó¥ ÎÅùÏóê Ï∂îÍ∞ÄÌïòÏó¨ Ï∂úÎ†•
  const handlePush = () => {
    if (!query) {
      alert("Í∞íÏù¥ ÏóÜÏäµÎãàÎã§!");
      return false;
    }
    const newArray = [...array, query];
    // newArray.push(query);
    setArray(newArray);
    setResult(newArray.join(", "));
  };

  // 6. pop: Î∞∞Ïó¥ÏóêÏÑú ÎßàÏßÄÎßâ ÏïÑÏù¥ÌÖúÏùÑ Ï†úÍ±∞ÌïòÍ≥† Í≤∞Í≥ºÎ•º Ï∂úÎ†•
  const handlePop = () => {
    const newArray = [...array];
    newArray.pop();
    setArray(newArray);
    setResult(newArray.join(", "));
  };

  // 7. slice: ÏõêÎ≥∏ Î∞∞Ïó¥Ïùò Îí§ÏóêÏÑú Îëê Í∞úÏùò ÏïÑÏù¥ÌÖúÏùÑ Ï†úÏô∏Ìïú ÎÇòÎ®∏ÏßÄÎ•º Ï∂úÎ†•
  const handleSlice = () => {
    const newArr = array.slice(0, -2);
    setResult(newArr.join(", "));
  };

  /*** article_2 Ìï®Ïàò ***/

  // 8. splice: ÏõêÎ≥∏ Î∞∞Ïó¥Ïùò 2Î≤àÏß∏ ÏúÑÏπòÎ∂ÄÌÑ∞ 2Í∞úÏùò ÏïÑÏù¥ÌÖúÏùÑ Ï†úÍ±∞ÌïòÍ≥† "pineappleüçç", "grapeüçá"ÏùÑ Ï∂îÍ∞ÄÌïòÏó¨ Í≤∞Í≥ºÎ•º Ï∂úÎ†•
  const handleSplice = () => {
    const newArray = [...array];
    newArray.splice(2, 2, "pineappleüçç", "grapeüçá");
    setResult(newArray.join(", "));
  };

  // 9. indexOf: inputÏóê ÏûÖÎ†•Ìïú Í∞íÍ≥º ÏùºÏπòÌïòÎäî Í∞íÏù¥ ÏûàÎäî Í≤ΩÏö∞ Ìï¥Îãπ indexÎ•º Ï∂úÎ†•, ÏóÜÎäî Í≤ΩÏö∞, -1ÏùÑ Ï∂úÎ†•
  const handleIndexOf = () => {
    const newArray = array.indexOf(query);
    setResult(newArray);
  };

  // 10. includes: ÏõêÎ≥∏Î∞∞Ïó¥Ïù¥ inputÏóê ÏûÖÎ†•Ìïú Í∞íÍ≥º ÏùºÏπòÌïòÎäî Ï†ïÌôïÌïú Í≥ºÏùºÎ™ÖÏùÑ Í∞ÄÏßÄÍ≥†ÏûàÎäî Í≤ΩÏö∞ true Ï∂úÎ†•, Í∑∏ Ïô∏Ïùò Í≤ΩÏö∞ false Ï∂úÎ†•
  const handleIncludes = () => {
    const newArray = array.includes(query);
    setResult(newArray.toString());
  };

  // 11. find: ÏõêÎ≥∏Î∞∞Ïó¥Ïù¥ inputÏóê ÏûÖÎ†•Ìïú Í∞íÏùÑ Ìè¨Ìï®ÌïòÎäî Í≥ºÏùºÎ™ÖÏùÑ Í∞ÄÏßÄÍ≥†ÏûàÎäî Í≤ΩÏö∞ Í≥ºÏùºÎ™ÖÏùÑ Ï∂úÎ†•, Í∑∏ Ïô∏Ïùò Í≤ΩÏö∞ "Not Found"Î•º Ï∂úÎ†•
  const handleFind = () => {
    if (!query) {
      alert("Í∞íÏù¥ ÏóÜÏäµÎãàÎã§!");
      return false;
    }
    const newArray = array.find(function (fruit) {
      return fruit.includes(query);
    });
    if (newArray) {
      setResult(newArray);
    } else {
      setResult("Not Found");
    }
  };

  // 12. some: ÏõêÎ≥∏Î∞∞Ïó¥Ïù¥ inputÏóê ÏûÖÎ†•Ìïú Í∞íÏùÑ Ìè¨Ìï®ÌïòÎäî Í≥ºÏùºÎ™ÖÏùÑ Í∞ÄÏßÄÍ≥†ÏûàÎäî Í≤ΩÏö∞ trueÏùÑ Ï∂úÎ†•, Í∑∏ Ïô∏Ïùò Í≤ΩÏö∞ false Î•º Ï∂úÎ†•
  const handleSome = () => {
    if (!query) {
      alert("Í∞íÏù¥ ÏóÜÏäµÎãàÎã§!");
      return false;
    }
    const newArray = array.some(function (fruit) {
      return fruit.includes(query);
    });
    setResult(newArray.toString());
  };

  // 13. every: Î™®Îì† Í≥ºÏùºÎ™ÖÏù¥ 5Í∏ÄÏûêÎ•º Ï¥àÍ≥ºÌïòÎäî Í≤ΩÏö∞ trueÎ•º Ï∂úÎ†•, Í∑∏ Ïô∏Ïùò Í≤ΩÏö∞ falseÎ•º Ï∂úÎ†•
  const handleEvery = () => {
    const newArray = array.every(function (fruit) {
      return fruit.length > 5;
    });
    setResult(newArray.toString());
  };

  // 14. sort: ÏïåÌååÎ≤≥ ÎÇ¥Î¶ºÏ∞®Ïàú Ï†ïÎ†¨ ÌõÑ Î¶¨Ïä§Ìä∏ Î™ÖÏùÑ ", "Î°ú Íµ¨Î∂ÑÌïòÏó¨ Ï∂úÎ†•
  const handleSort = () => {
    const newArray = [...array];
    console.log(newArray);
    newArray.sort(function (a, b) {
      return b.localeCompare(a);
    });
    console.log(newArray);
    setResult(newArray.join(", "));
  };

  // 15. join: Î∞∞Ïó¥Ïùò Î™®Îì† ÏöîÏÜåÎ•º ÏâºÌëú(", ")Î°ú Íµ¨Î∂ÑÌïòÍ≥† Í≤∞Ìï©Îêú Î¨∏ÏûêÏó¥ÏùÑ Ï∂úÎ†•
  const handleJoin = () => {
    const newArray = array.join(", ");
    setResult(newArray);
  };

  return (
    <div className="main-layout">
      <div className="top">
        <h1>Array API Practice</h1>
        <div>
          <input
            type="text"
            placeholder="Enter text"
            value={query}
            onChange={function (e) {
              setQuery(e.target.value);
            }}
          />
        </div>
      </div>

      <section>
        <article>
          <button onClick={handleForEach}>forEach</button>
          <button onClick={handleFilter}>filter</button>
          <button onClick={handleMap}>map</button>
          <button onClick={handleReduce}>reduce</button>
          <button onClick={handlePush}>push</button>
          <button onClick={handlePop}>pop</button>
          <button onClick={handleSlice}>slice</button>
        </article>
        <article>
          <button onClick={handleSplice}>splice</button>
          <button onClick={handleIndexOf}>indexOf</button>
          <button onClick={handleIncludes}>includes</button>
          <button onClick={handleFind}>find</button>
          <button onClick={handleSome}>some</button>
          <button onClick={handleEvery}>every</button>
          <button onClick={handleSort}>sort</button>
          <button onClick={handleJoin}>join</button>
        </article>
      </section>
      <div className="input-layout">
        <div class="division-line"></div>
        <div className="origin">
          <p>ÏõêÎ≥∏ Î∞∞Ïó¥</p>
          {array.join(", ")}
        </div>
        <div className="result">
          {" "}
          <p>Result</p>
          {result}
        </div>
      </div>
    </div>
  );
}

export default App;
